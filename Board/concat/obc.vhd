-- VHDL Entity OBC.Test.symbol
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 10:30:44 14.07.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

ENTITY Test IS
   PORT( 
      clock : IN     std_ulogic;
      reset : IN     std_ulogic;
      Led1  : OUT    std_logic;
      Led2  : OUT    std_logic;
      Led3  : OUT    std_logic;
      Led4  : OUT    std_logic;
      Led5  : OUT    std_logic
   );

-- Declarations

END Test ;

--
-- VHDL Architecture OBC.Test.struct
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 10:30:44 14.07.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;


ARCHITECTURE struct OF Test IS

   -- Architecture declarations

   -- Internal signal declarations



BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 5 eb5
     process(clock, reset)
     begin
       if reset = '1' then
         Led1 <= '0';
       elsif rising_edge(clock) then
         Led1 <= not Led1;
       end if;
     end process;

   -- HDL Embedded Text Block 6 eb6
     process(clock, reset)
     begin
       if reset = '1' then
         Led2 <= '0';
   	  Led3 <= '0';
   	  Led4 <= '0';
   	  Led5 <= '0';
       elsif rising_edge(clock) then
         Led2 <= '0';
   	  Led3 <= '0';
   	  Led4 <= '0';
   	  Led5 <= '0';
       end if;
     end process;


   -- Instance port mappings.

END struct;




-- VHDL Entity Board.DFF.symbol
--
-- Created:
--          by - francois.francois (Aphelia)
--          at - 13:07:05 02/19/19
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY DFF IS
   PORT( 
      CLK : IN     std_uLogic;
      CLR : IN     std_uLogic;
      D   : IN     std_uLogic;
      Q   : OUT    std_uLogic
   );

-- Declarations

END DFF ;





ARCHITECTURE sim OF DFF IS
BEGIN

  process(clk, clr)
  begin
    if clr = '1' then
      q <= '0';
    elsif rising_edge(clk) then
      q <= d;
    end if;
  end process;

END ARCHITECTURE sim;





-- VHDL Entity Board.inverterIn.symbol
--
-- Created:
--          by - francois.francois (Aphelia)
--          at - 13:07:14 02/19/19
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY inverterIn IS
   PORT( 
      in1  : IN     std_uLogic;
      out1 : OUT    std_uLogic
   );

-- Declarations

END inverterIn ;





ARCHITECTURE sim OF inverterIn IS
BEGIN

  out1 <= NOT in1;

END ARCHITECTURE sim;





-- VHDL Entity Board.obc_circuit.symbol
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 10:32:08 14.07.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

ENTITY obc_circuit IS
   PORT( 
      clock   : IN     std_ulogic;
      reset_N : IN     std_ulogic;
      Led2    : OUT    std_logic;
      Led3    : OUT    std_logic;
      Led4    : OUT    std_logic;
      Led5    : OUT    std_logic;
      LedOut  : OUT    std_ulogic
   );

-- Declarations

END obc_circuit ;

--
-- VHDL Architecture Board.obc_circuit.struct
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 10:32:08 14.07.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY Board;
LIBRARY OBC;

ARCHITECTURE struct OF obc_circuit IS

   -- Architecture declarations
   constant signalBitNb: positive := 16;
   constant phaseBitNb: positive := 17;
   constant stepX: positive := 2;
   constant stepY: positive := 3;

   -- Internal signal declarations
   SIGNAL logic1      : std_uLogic;
   SIGNAL reset       : std_ulogic;
   SIGNAL resetSnch_N : std_ulogic;
   SIGNAL resetSynch  : std_ulogic;


   -- Component Declarations
   COMPONENT DFF
   PORT (
      CLK : IN     std_uLogic ;
      CLR : IN     std_uLogic ;
      D   : IN     std_uLogic ;
      Q   : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT inverterIn
   PORT (
      in1  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT Test
   PORT (
      clock : IN     std_ulogic ;
      reset : IN     std_ulogic ;
      Led1  : OUT    std_logic ;
      Led2  : OUT    std_logic ;
      Led3  : OUT    std_logic ;
      Led4  : OUT    std_logic ;
      Led5  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : DFF USE ENTITY Board.DFF;
   FOR ALL : Test USE ENTITY OBC.Test;
   FOR ALL : inverterIn USE ENTITY Board.inverterIn;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 4 eb4
   logic1 <= '1';


   -- Instance port mappings.
   I_dff : DFF
      PORT MAP (
         CLK => clock,
         CLR => reset,
         D   => logic1,
         Q   => resetSnch_N
      );
   I_inv1 : inverterIn
      PORT MAP (
         in1  => reset_N,
         out1 => reset
      );
   I_inv2 : inverterIn
      PORT MAP (
         in1  => resetSnch_N,
         out1 => resetSynch
      );
   I0 : Test
      PORT MAP (
         clock => clock,
         reset => resetSynch,
         Led1  => LedOut,
         Led2  => Led2,
         Led3  => Led3,
         Led4  => Led4,
         Led5  => Led5
      );

END struct;




