--
-- VHDL Architecture SPI_test.spiFifo_tb.struct
--
-- Created:
--          by - silvan.zahno.UNKNOWN (WE6996)
--          at - 07:39:46 11.11.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY SPI;
LIBRARY SPI_test;

ARCHITECTURE struct OF spiFifo_tb IS

   -- Architecture declarations
   constant cPol: std_ulogic := '0';
   --constant cPHa: std_ulogic := '0';
   --constant cPol: std_ulogic := '1';
   constant cPHa: std_ulogic := '1';
   
   constant spiDataBitNb: positive := 8;
   constant spiFifoDepth: positive := 8;
   constant spiClockPeriod: positive := 1;
   constant spiFramePeriod: positive := 1;

   -- Internal signal declarations
   SIGNAL MISO        : std_logic;
   SIGNAL MISOu       : std_ulogic;
   SIGNAL MOSI        : std_ulogic;
   SIGNAL SS_n        : std_ulogic;
   SIGNAL clock       : std_ulogic;
   SIGNAL endTransfer : std_logic;
   SIGNAL masterData  : std_ulogic_vector(spiDataBitNb-1 DOWNTO 0);
   SIGNAL masterFull  : std_ulogic;
   SIGNAL masterWr    : std_ulogic;
   SIGNAL reset       : std_ulogic;
   SIGNAL sClk        : std_ulogic;
   SIGNAL slaveData   : std_ulogic_vector(spiDataBitNb-1 DOWNTO 0);
   SIGNAL slaveEmpty  : std_ulogic;
   SIGNAL slaveRd     : std_ulogic;


   -- Component Declarations
   COMPONENT spiFifo
   GENERIC (
      dataBitNb      : positive   := 8;
      fifoDepth      : positive   := 8;      --Max nbr of sequential transfers
      spiClockPeriod : positive   := 1;      --SPI clock divider
      spiFramePeriod : positive   := 1;      --SPI Inter Frame Gap
      cPol           : std_ulogic := '0';
      cPha           : std_ulogic := '0'
   );
   PORT (
      slaveRd     : IN     std_ulogic ;
      slaveData   : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      clock       : IN     std_ulogic ;
      MISO        : IN     std_ulogic ;
      reset       : IN     std_ulogic ;
      MOSI        : OUT    std_ulogic ;
      slaveEmpty  : OUT    std_ulogic ;
      masterFull  : OUT    std_ulogic ;
      masterData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      masterWr    : IN     std_ulogic ;
      sClk        : OUT    std_ulogic ;
      endTransfer : OUT    std_logic ;
      SS_n        : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT spiFifo_tester
   GENERIC (
      spiDataBitNb : positive   := 8;
      cPol         : std_ulogic := '0';
      cPha         : std_ulogic := '0'
   );
   PORT (
      MISO        : IN     std_logic ;
      MOSI        : IN     std_ulogic ;
      SS_n        : IN     std_ulogic ;
      endTransfer : IN     std_logic ;
      masterFull  : IN     std_ulogic ;
      sClk        : IN     std_ulogic ;
      slaveData   : IN     std_ulogic_vector (spiDataBitNb-1 DOWNTO 0);
      slaveEmpty  : IN     std_ulogic ;
      clock       : OUT    std_ulogic ;
      masterData  : OUT    std_ulogic_vector (spiDataBitNb-1 DOWNTO 0);
      masterWr    : OUT    std_ulogic ;
      reset       : OUT    std_ulogic ;
      slaveRd     : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT spiStorage
   GENERIC (
      cPol : std_ulogic := '0';
      cPha : std_ulogic := '0'
   );
   PORT (
      SS_n : IN     std_ulogic ;
      MISO : OUT    std_logic ;
      MOSI : IN     std_ulogic ;
      sClk : IN     std_ulogic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : spiFifo USE ENTITY SPI.spiFifo;
   FOR ALL : spiFifo_tester USE ENTITY SPI_test.spiFifo_tester;
   FOR ALL : spiStorage USE ENTITY SPI_test.spiStorage;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   MISO <= 'Z' when SS_n = '0'
     else '0';
   
   MISOu <= MISO;


   -- Instance port mappings.
   spiFifo_inst : spiFifo
      GENERIC MAP (
         dataBitNb      => spiDataBitNb,
         fifoDepth      => spiFifoDepth,
         spiClockPeriod => spiClockPeriod,
         spiFramePeriod => spiFramePeriod,
         cPol           => cPol,
         cPha           => cPha
      )
      PORT MAP (
         slaveRd     => slaveRd,
         slaveData   => slaveData,
         clock       => clock,
         MISO        => MISOu,
         reset       => reset,
         MOSI        => MOSI,
         slaveEmpty  => slaveEmpty,
         masterFull  => masterFull,
         masterData  => masterData,
         masterWr    => masterWr,
         sClk        => sClk,
         endTransfer => endTransfer,
         SS_n        => SS_n
      );
   spiFifo_tester_inst : spiFifo_tester
      GENERIC MAP (
         spiDataBitNb => spiDataBitNb,
         cPol         => cPol,
         cPha         => cPha
      )
      PORT MAP (
         MISO        => MISO,
         MOSI        => MOSI,
         SS_n        => SS_n,
         endTransfer => endTransfer,
         masterFull  => masterFull,
         sClk        => sClk,
         slaveData   => slaveData,
         slaveEmpty  => slaveEmpty,
         clock       => clock,
         masterData  => masterData,
         masterWr    => masterWr,
         reset       => reset,
         slaveRd     => slaveRd
      );
   spiStorage_inst : spiStorage
      GENERIC MAP (
         cPol => cPol,
         cPha => cPha
      )
      PORT MAP (
         SS_n => SS_n,
         MISO => MISO,
         MOSI => MOSI,
         sClk => sClk
      );

END struct;
