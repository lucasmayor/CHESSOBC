--
-- VHDL Architecture OBC_test.SPI_tranceiver_test.struct
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 11:01:54 16.07.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.numeric_std.all;

LIBRARY OBC_test;
LIBRARY SPI;

ARCHITECTURE struct OF SPI_tranceiver_test IS

   -- Architecture declarations
   constant dataBitNb : positive := 8;

   -- Internal signal declarations
   SIGNAL MISO      : std_ulogic;
   SIGNAL MOSI      : std_ulogic;
   SIGNAL busy      : std_ulogic;
   SIGNAL clock     : std_ulogic;
   SIGNAL dataIn    : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
   SIGNAL dataOut   : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
   SIGNAL dataValid : std_ulogic;
   SIGNAL dataWr    : std_ulogic;
   SIGNAL en2x      : std_ulogic;
   SIGNAL reset     : std_ulogic;
   SIGNAL sClk      : std_ulogic;
   SIGNAL sendFrame : std_ulogic;
   SIGNAL slaveSel  : std_ulogic;


   -- Component Declarations
   COMPONENT tranceiver_TB
   GENERIC (
      dataBitNb : positive := dataBitNb
   );
   PORT (
      MOSI      : IN     std_ulogic ;
      busy      : IN     std_ulogic ;
      dataIn    : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      dataValid : IN     std_ulogic ;
      sClk      : IN     std_ulogic ;
      sendFrame : IN     std_ulogic ;
      slaveSel  : IN     std_ulogic ;
      MISO      : OUT    std_ulogic ;
      clock     : OUT    std_ulogic ;
      dataOut   : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      dataWr    : OUT    std_ulogic ;
      reset     : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT spiTimer
   GENERIC (
      clockPeriod : positive := 1;
      framePeriod : positive := 1
   );
   PORT (
      en2x      : OUT    std_ulogic ;
      clock     : IN     std_ulogic ;
      reset     : IN     std_ulogic ;
      sendFrame : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT spiTransceiver
   GENERIC (
      dataBitNb : positive   := 8;
      cPol      : std_ulogic := '0';
      cPha      : std_ulogic := '0'
   );
   PORT (
      sClk      : OUT    std_ulogic ;
      clock     : IN     std_ulogic ;
      reset     : IN     std_ulogic ;
      dataOut   : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      dataWr    : IN     std_ulogic ;
      dataIn    : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      en2x      : IN     std_ulogic ;
      MOSI      : OUT    std_ulogic ;
      MISO      : IN     std_ulogic ;
      slaveSel  : OUT    std_ulogic ;
      dataValid : OUT    std_ulogic ;
      busy      : OUT    std_ulogic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : spiTimer USE ENTITY SPI.spiTimer;
   FOR ALL : spiTransceiver USE ENTITY SPI.spiTransceiver;
   FOR ALL : tranceiver_TB USE ENTITY OBC_test.tranceiver_TB;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_1 : tranceiver_TB
      GENERIC MAP (
         dataBitNb => 8
      )
      PORT MAP (
         MOSI      => MOSI,
         busy      => busy,
         dataIn    => dataIn,
         dataValid => dataValid,
         sClk      => sClk,
         sendFrame => sendFrame,
         slaveSel  => slaveSel,
         MISO      => MISO,
         clock     => clock,
         dataOut   => dataOut,
         dataWr    => dataWr,
         reset     => reset
      );
   U_2 : spiTimer
      GENERIC MAP (
         clockPeriod => 1,
         framePeriod => 1
      )
      PORT MAP (
         en2x      => en2x,
         clock     => clock,
         reset     => reset,
         sendFrame => sendFrame
      );
   U_0 : spiTransceiver
      GENERIC MAP (
         dataBitNb => dataBitNb,
         cPol      => '0',
         cPha      => '0'
      )
      PORT MAP (
         sClk      => sClk,
         clock     => clock,
         reset     => reset,
         dataOut   => dataOut,
         dataWr    => dataWr,
         dataIn    => dataIn,
         en2x      => en2x,
         MOSI      => MOSI,
         MISO      => MISO,
         slaveSel  => slaveSel,
         dataValid => dataValid,
         busy      => busy
      );

END struct;
